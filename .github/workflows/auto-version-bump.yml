name: Auto Version Bump & Merge

on:
  push:
    branches:
      - patch
      - minor
      - major

jobs:
  bump-and-merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Determine New Version
        id: version
        run: |
          # Read the current version from package.json
          VERSION=$(jq -r .version package.json)
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          PATCH=$(echo $VERSION | cut -d. -f3)
          
          # Determine branch and update version accordingly
          BRANCH="${GITHUB_REF#refs/heads/}"
          case "$BRANCH" in
            patch)
              PATCH=$((PATCH + 1))
              ;;
            minor)
              MINOR=$((MINOR + 1))
              PATCH=0
              ;;
            major)
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
              ;;
          esac

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"
          # Update package.json with the new version
          jq ".version = \"$NEW_VERSION\"" package.json > temp.json && mv temp.json package.json
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit Version Bump
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add package.json
          git commit -m "ðŸ”– Bump version to ${{ steps.version.outputs.new_version }}"
          git push origin ${{ github.ref_name }}

      - name: Merge to main
        run: |
          git fetch origin main
          git checkout main
          git merge ${{ github.ref_name }} --no-edit
          git push origin main

      - name: Tag the new version
        run: |
          NEW_VERSION=$(jq -r .version package.json)
          git tag v$NEW_VERSION
          git push origin v$NEW_VERSION
