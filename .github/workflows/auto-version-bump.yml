name: Auto Version Bump & Release

on:
  push:
    branches:
      - patch
      - minor
      - major
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type (patch/minor/major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  bump-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: |
          echo "Running linting checks only in CI environment"
          npm test
        # Full test suite can be run locally with: npm run full-test

      - name: Determine Version Type
        id: version_type
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "type=${{ github.event.inputs.version_type }}" >> $GITHUB_OUTPUT
          else
            echo "type=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
          fi

      - name: Determine New Version
        id: version
        run: |
          VERSION=$(jq -r .version package.json)
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          PATCH=$(echo $VERSION | cut -d. -f3)
          
          case "${{ steps.version_type.outputs.type }}" in
            patch)
              PATCH=$((PATCH + 1))
              ;;
            minor)
              MINOR=$((MINOR + 1))
              PATCH=0
              ;;
            major)
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
              ;;
          esac

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update CHANGELOG.md
        run: |
          DATE=$(date +%Y-%m-%d)
          sed -i "1i\\\n## [${{ steps.version.outputs.new_version }}] - $DATE\n" CHANGELOG.md

      - name: Update package.json
        run: |
          jq ".version = \"${{ steps.version.outputs.new_version }}\"" package.json > temp.json && mv temp.json package.json

      - name: Commit Changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add package.json CHANGELOG.md
          git commit -m "ðŸ”– Release v${{ steps.version.outputs.new_version }}"
          git tag "v${{ steps.version.outputs.new_version }}"
          git push origin HEAD --tags

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GH_PAT }}
          commit-message: "ðŸ”– Release v${{ steps.version.outputs.new_version }}"
          title: "ðŸ”– Release v${{ steps.version.outputs.new_version }}"
          body: |
            ## Release v${{ steps.version.outputs.new_version }}
            
            This PR was automatically created by the version bump workflow.
            
            ### Changes
            - Version bump to v${{ steps.version.outputs.new_version }}
            - Updated CHANGELOG.md
            
            Please review and merge to trigger the release process.
          branch: "release/v${{ steps.version.outputs.new_version }}"
          base: main
          labels: release
